<div .masthead>
  <div .container>
    <div .row>
      <h1 .header>
        ♡Heartcore Collusion♡
      <h2>
        A total collusion of the heart
        <br>
        ♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡

<div .container>
  <!-- Starting
    ================================================== -->
  <div .bs-docs-section>
    <div .row>
      <div .col-lg-12>
        <div .page-header>
          <h1 #start>Starting
  
          <p>
            Now that you have a working project you should use the
            <a href=http://www.yesodweb.com/book/>fartesod book</a> to learn more.
          <p>
            You can also use this scaffolded site to explore some concepts, and best practices.
  
          <ul .list-group>
  
            <li .list-group-item>
              This page was generated by the <tt>#{handlerName}</tt> handler in
              <tt>Handler/Home.hs</tt>.
  
            <li .list-group-item>
              The <tt>#{handlerName}</tt> handler is set to generate your
              site's home screen in Routes file
              <tt>config/routes
  
            <li .list-group-item>
              We can link to other handlers, like the <a href="@{ProfileR}">Profile</a>.
              Try it out as an anonymous user and see the access denied.
              Then, try to <a href="@{AuthR LoginR}">login</a> with the dummy authentication added
              while in development.
  
            <li .list-group-item>
              The HTML you are seeing now is actually composed by a number of <em>widgets</em>, #
              most of them are brought together by the <tt>defaultLayout</tt> function which #
              is defined in the <tt>Foundation.hs</tt> module, and used by <tt>#{handlerName}</tt>. #
              All the files for templates and wigdets are in <tt>templates</tt>.
  
            <li .list-group-item>
              A Widget's Html, Css and Javascript are separated in three files with the
              <tt>.hamlet</tt>, <tt>.lucius</tt> and <tt>.julius</tt> extensions.
  
            <li .list-group-item ##{aDomId}>
              If you had javascript enabled then you wouldn't be seeing this.
  <!-- Hearts list -->
  <ul>
    $forall stat <- allStats
      <li>#{statsHearts $ entityVal stat}
  
  <!-- JSON
    ================================================== -->
  <div .bs-docs-section>
    <div .row>
      <div .col-lg-12>
        <div .page-header>
          <h1 #json>JSON
  
          <p>
            Yesod has JSON support baked-in.
            The form below makes an AJAX request with Javascript,
            then updates the page with your submission.
            (see <tt>Handler/Comment.hs</tt>, <tt>templates/homepage.julius</tt>,
            and <tt>Handler/Home.hs</tt> for the implementation).
  
    <div .row>
      <div .col-lg-6>
        <div .bs-callout.bs-callout-info.well>
          <form .form-horizontal ##{commentFormId}>
            <div .field>
              <textarea rows="2" ##{commentTextareaId} placeholder="Your comment here..." required></textarea>
  
            <button .btn.btn-primary type=submit>
               Create comment
  
       <div .col-lg-4.col-lg-offset-1>
         <div .bs-callout.bs-callout-info>
           <small>
             Your comments will appear here. You can also open the
             console log to see the raw response from the server.
           <ul ##{commentListId}>
             $forall comment <- allComments
               <li>#{commentMessage $ entityVal comment}
  
  <hr>
  
